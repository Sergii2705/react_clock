{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerIdClock","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clockName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","timerIdRename","handleHideClock","handleShowClock","renameClock","document","addEventListener","prevName","curName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAZP,kCAeE,WACEL,OAAOM,cAAcP,KAAKD,gBAhB9B,oBAmBE,WACE,IAAQS,EAAcR,KAAKS,MAAnBD,UACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGb,EAAKS,8BAhChB,GAA2BK,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACVX,UAAWI,KAHf,EAMEQ,cAAgB,EANlB,EAiCEC,gBAAkB,WACZ,EAAKzB,MAAMuB,WACblB,OAAOM,cAAc,EAAKa,eAC1B,EAAKjB,SAAS,CAAEgB,UAAU,MApChC,EAwCEG,gBAAkB,WACX,EAAK1B,MAAMuB,WACd,EAAKC,cAAgBnB,OAAOC,YAAY,EAAKqB,YAAa,MAC1D,EAAKpB,SAAS,CAAEgB,UAAU,MA3ChC,EA+CEI,YAAc,WACZ,EAAKpB,SAAS,CAAEK,UAAWI,OAhD/B,uDAQE,WACEZ,KAAKoB,cAAgBnB,OAAOC,YAAYF,KAAKuB,YAAa,MAC1DC,SAASC,iBAAiB,cAAezB,KAAKqB,iBAC9CG,SAASC,iBAAiB,QAASzB,KAAKsB,mBAX5C,gCAcE,WACE,8CAAmBI,EAAnB,EAAQlB,UACWmB,EAAY3B,KAAKJ,MAA5BY,UAEJkB,IAAaC,GAEfvB,QAAQC,IAAR,uBAA4BqB,EAA5B,eAA2CC,MApBjD,kCAwBE,WACM3B,KAAKJ,MAAMuB,UACblB,OAAOM,cAAcP,KAAKoB,eAG5BI,SAASI,oBAAoB,cAAe5B,KAAKqB,iBACjDG,SAASI,oBAAoB,QAAS5B,KAAKsB,mBA9B/C,oBAmDE,WACE,MAAgCtB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAzDvC,GAAyBG,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.7a30544c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerIdClock = 0;\n\n  componentDidMount() {\n    this.timerIdClock = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdClock);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerIdRename = 0;\n\n  componentDidMount() {\n    this.timerIdRename = window.setInterval(this.renameClock, 3300);\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n  }\n\n  componentDidUpdate(...args: [{}, State]) {\n    const { clockName: prevName } = args[1];\n    const { clockName: curName } = this.state;\n\n    if (prevName !== curName) {\n      // eslint-disable-next-line\n      console.log(`Renamed from ${prevName} to ${curName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.hasClock) {\n      window.clearInterval(this.timerIdRename);\n    }\n\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n  }\n\n  handleHideClock = () => {\n    if (this.state.hasClock) {\n      window.clearInterval(this.timerIdRename);\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleShowClock = () => {\n    if (!this.state.hasClock) {\n      this.timerIdRename = window.setInterval(this.renameClock, 3300);\n      this.setState({ hasClock: true });\n    }\n  };\n\n  renameClock = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}